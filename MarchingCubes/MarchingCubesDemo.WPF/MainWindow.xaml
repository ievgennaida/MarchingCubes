<Window
    x:Class="MarchingCubesDemo.WPF.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:MarchingCubesDemo.WPF"
    mc:Ignorable="d"
    x:Name="Window"
    Title="Gradient descent"
    Width="825.5"
    Height="609"
    Background="#FFA3CFFF"
    WindowStyle="None"
    MouseDoubleClick="Window_MouseDoubleClick"
    MinWidth="800"
    MinHeight="600">

    <Window.Resources>
        <BooleanToVisibilityConverter
            x:Key="BoolConverter" />
        <LinearGradientBrush
            x:Key="ButtonNormalBackgroundFill"
            EndPoint="0.5,1"
            StartPoint="0.5,0">
            <GradientStop
                Color="#FFFFFFFF"
                Offset="0" />
            <GradientStop
                Color="#FFF0F0EA"
                Offset="0.9" />
        </LinearGradientBrush>

        <ControlTemplate
            x:Key="ButtonTemplate"
            TargetType="{x:Type Button}">
            <Grid
                Background="{TemplateBinding Background}">
                <TextBlock
                    Width="Auto"
                    Height="Auto"
                    Text="{TemplateBinding Content}"
                    TextWrapping="Wrap"
                    Foreground="{TemplateBinding Foreground}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontStyle="{TemplateBinding FontStyle}"
                    FontSize="{TemplateBinding FontSize}"
                    Cursor="Hand"
                    FontFamily="{TemplateBinding FontFamily}"
                    x:Name="textBlock"
                    Margin="{TemplateBinding Padding}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                        Property="Foreground"
                        TargetName="textBlock"
                        Value="#FFFF0000" />
                    <Setter
                        Property="TextDecorations"
                        TargetName="textBlock"
                        Value="Underline" />
                </Trigger>
                <Trigger
                    Property="IsPressed"
                    Value="True">
                    <Setter
                        Property="TextDecorations"
                        TargetName="textBlock"
                        Value="Underline" />
                    <Setter
                        Property="Foreground"
                        TargetName="textBlock"
                        Value="#FFD30505" />
                    <Setter
                        Property="FontWeight"
                        TargetName="textBlock"
                        Value="Normal" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style
            x:Key="TransparentButtonStyle"
            TargetType="{x:Type Button}">
            <Setter
                Property="FontFamily"
                Value="Arial Rounded MT" />
            <Setter
                Property="FontStyle"
                Value="Italic" />
            <Setter
                Property="Foreground"
                Value="#FF6D4EF0" />
            <Setter
                Property="Background"
                Value="Transparent" />
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter
                Property="Template"
                Value="{StaticResource ButtonTemplate}" />
        </Style>


        <LinearGradientBrush
            x:Key="CheckRadioFillNormal">
            <GradientStop
                Color="#FFD2D4D2"
                Offset="0" />
            <GradientStop
                Color="#FFFFFFFF"
                Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush
            x:Key="CheckRadioStrokeNormal">
            <GradientStop
                Color="#FF004C94"
                Offset="0" />
            <GradientStop
                Color="#FF003C74"
                Offset="1" />
        </LinearGradientBrush>

        <Style
            x:Key="TransparentCheckBox"
            TargetType="{x:Type CheckBox}">
            <Setter
                Property="Background"
                Value="{StaticResource CheckRadioFillNormal}" />
            <Setter
                Property="BorderBrush"
                Value="{StaticResource CheckRadioStrokeNormal}" />
            <Setter
                Property="BorderThickness"
                Value="1" />
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type CheckBox}">
                        <TextBlock
                            FontFamily="Arial Rounded MT"
                            FontStyle="Italic"
                            Foreground="#FF6D4EF0"
                            Width="Auto"
                            Height="Auto"
                            Text="{TemplateBinding Content}"
                            TextWrapping="Wrap"
                            x:Name="textBlock"
                            FontSize="{TemplateBinding FontSize}"
                            Cursor="Hand"
                            IsEnabled="True"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                        <ControlTemplate.Triggers>
                            <EventTrigger
                                RoutedEvent="FrameworkElement.Loaded" />
                            <Trigger
                                Property="IsMouseOver"
                                Value="True">
                                <Setter
                                    Property="TextDecorations"
                                    TargetName="textBlock"
                                    Value="Underline" />
                                <Setter
                                    Property="Foreground"
                                    TargetName="textBlock"
                                    Value="#FFFF0000" />
                            </Trigger>
                            <Trigger
                                Property="IsChecked"
                                Value="True">
                                <Setter
                                    Property="Foreground"
                                    TargetName="textBlock"
                                    Value="#FFFF2200" />
                            </Trigger>
                            <Trigger
                                Property="HasContent"
                                Value="true">
                                <Setter
                                    Property="Padding"
                                    Value="2,0,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush
            x:Key="ButtonBorder"
            Color="#FF003C74" />
        <Style
            x:Key="LinkButtonControl"
            TargetType="{x:Type Button}">
            <Setter
                Property="HorizontalContentAlignment"
                Value="Center" />
            <Setter
                Property="VerticalContentAlignment"
                Value="Center" />
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type Button}">
                        <TextBlock
                            FontFamily="Arial Rounded MT"
                            FontStyle="Italic"
                            Foreground="#FF6D4EF0"
                            Width="Auto"
                            Height="Auto"
                            Text="{TemplateBinding Content}"
                            TextWrapping="Wrap"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            x:Name="textBlock"
                            FontSize="12" />
                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="IsMouseOver"
                                Value="True">
                                <Setter
                                    Property="FontWeight"
                                    TargetName="textBlock"
                                    Value="Normal" />
                                <Setter
                                    Property="TextDecorations"
                                    TargetName="textBlock"
                                    Value="Underline" />
                                <Setter
                                    Property="Foreground"
                                    TargetName="textBlock"
                                    Value="#FF6D4EF0" />
                            </Trigger>
                            <Trigger
                                Property="IsKeyboardFocused"
                                Value="true" />
                            <Trigger
                                Property="ToggleButton.IsChecked"
                                Value="true">
                                <Setter
                                    Property="Foreground"
                                    Value="#FF382222" />
                                <Setter
                                    Property="FontWeight"
                                    TargetName="textBlock"
                                    Value="Bold" />
                            </Trigger>
                            <Trigger
                                Property="IsPressed"
                                Value="True">
                                <Setter
                                    Property="FontWeight"
                                    TargetName="textBlock"
                                    Value="Normal" />
                                <Setter
                                    Property="Foreground"
                                    TargetName="textBlock"
                                    Value="#FFFF0000" />
                                <Setter
                                    Property="TextDecorations"
                                    TargetName="textBlock"
                                    Value="Underline" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate
            x:Key="EmptyRadioButtonTemplate"
            TargetType="{x:Type RadioButton}">
            <Grid
                Background="{TemplateBinding Background}"
                Cursor="Hand">
                <TextBlock
                    x:Name="contentPresenter"
                    Text="{TemplateBinding Content}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="{TemplateBinding Padding}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="RadioButton.IsChecked"
                    Value="True">
                    <Setter
                        Property="TextDecorations"
                        TargetName="contentPresenter"
                        Value="Underline" />
                </Trigger>
                <Trigger
                    Property="RadioButton.IsMouseOver"
                    Value="True">
                    <Setter
                        Property="Background"
                        TargetName="contentPresenter"
                        Value="LightBlue" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style
            x:Key="EmptyRadioButtonStyle"
            TargetType="{x:Type RadioButton}">
            <Style.Triggers>

            </Style.Triggers>
            <Setter
                Property="Foreground"
                Value="#FF6D4EF0" />
            <Setter
                Property="Background"
                Value="Transparent" />
            <Setter
                Property="BorderThickness"
                Value="1" />
            <Setter
                Property="Template"
                Value="{StaticResource EmptyRadioButtonTemplate}">
            </Setter>
            <Setter
                Property="FontWeight"
                Value="Bold" />
        </Style>
    </Window.Resources>

    <Grid
        x:Name="LayoutRoot"
        MouseDown="WindowMouseDown">
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="40" />
            <ColumnDefinition
                Width="140*" />
            <ColumnDefinition
                Width="249*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="60" />
            <RowDefinition />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="45" />
        </Grid.RowDefinitions>
        <Grid.Background>
            <LinearGradientBrush
                EndPoint="0.5,1"
                StartPoint="0.5,0">
                <GradientStop
                    Color="#FF5398ED"
                    Offset="0" />
                <GradientStop
                    Color="#FF5386ED"
                    Offset="1" />
            </LinearGradientBrush>
        </Grid.Background>
        <TextBlock
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Text="Marching cubes demo"
            TextWrapping="Wrap"
            FontSize="30"
            FontFamily="Times New Roman"
            FontStyle="Italic"
            FontWeight="Bold"
            Background="{x:Null}"
            Margin="35,11.818,0,11.819"
            Grid.ColumnSpan="3">
            <TextBlock.Foreground>
                <LinearGradientBrush
                    EndPoint="0.5,1"
                    StartPoint="0.5,0">
                    <GradientStop
                        Color="#FF00122B"
                        Offset="0" />
                    <GradientStop
                        Color="#FF3A6FC1"
                        Offset="0.991" />
                </LinearGradientBrush>
            </TextBlock.Foreground>
        </TextBlock>

        <Image
            MouseDown="WindowMouseDown"
            Source="Resources\cubesMask.png"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Width="352"
            Height="348"
            Opacity="0.205"
            Grid.RowSpan="2"
            Grid.ColumnSpan="3"
            d:IsLocked="True" />
        <Grid
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            MinWidth="42"
            Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.Background>
                <LinearGradientBrush
                    EndPoint="0.118,1.206"
                    StartPoint="0.932,-0.831">
                    <GradientStop
                        Color="#FF2679CD"
                        Offset="0" />
                    <GradientStop
                        Color="#007D81A8"
                        Offset="1" />
                </LinearGradientBrush>
            </Grid.Background>
            <Button
                Width="Auto"
                Height="17"
                Content="_"
                HorizontalContentAlignment="Center"
                Background="Transparent"
                FontFamily="Bodoni MT"
                FontSize="10"
                Foreground="#FFFFFFFF"
                d:IsStaticText="True"
                x:Name="btnMinimaze"
                Click="btnMinimazeClick"
                MinWidth="10"
                HorizontalAlignment="Right"
                Padding="9,1"
                Style="{StaticResource TransparentButtonStyle}" />

            <Button
                Width="Auto"
                Content="X"
                HorizontalAlignment="Right"
                HorizontalContentAlignment="Center"
                FontSize="10"
                FontFamily="Bodoni MT"
                d:IsStaticText="True"
                Background="Transparent"
                Foreground="#FFFFFFFF"
                Click="btnExitClick"
                x:Name="btnExit"
                MinWidth="10"
                Grid.Column="1"
                Padding="9,1"
                Style="{StaticResource TransparentButtonStyle}" />

        </Grid>
        <Border
            x:Name="container"
            Background="White"
            Margin="1,0,0,0"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="1"
            Grid.ColumnSpan="2">
            <Viewport3D
                Grid.Row="0"
                Grid.Column="0"
                x:Name="viewport"
                ClipToBounds="True">

                <!--
              NOTE: In order for the Headlight feature to work the Camera
                    and DirectionalLight should have the same initial
                    orientation.  (Default direction for both is "0,0,-1")
          -->
                <Viewport3D.Camera>
                    <OrthographicCamera
                        x:Name="Camera"
                        Position="0,0,16"
                        UpDirection="0 1 0"
                        LookDirection="0 0 -1"
                        Width="4"
                        NearPlaneDistance="0" />
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup>
                            <AmbientLight
                                x:Name="AmbientLight"
                                Color="Black" />
                            <DirectionalLight
                                x:Name="Headlight"
                                Color="White" />
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>
        </Border>

        <Grid
            VerticalAlignment="Center"
            Grid.ColumnSpan="3"
            Grid.Row="2"
            HorizontalAlignment="Right">
            <StackPanel
                Orientation="Horizontal"
                Grid.Column="1">
                <RadioButton
                    Background="Transparent"
                    Content="°"
                    FontSize="16"
                    FontStyle="Normal"
                    FontFamily="Wingdings"
                    ToolTip="Free camera"
                    Width="25"
                    Style="{StaticResource EmptyRadioButtonStyle}"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    IsChecked="{Binding FreeLookupMode, Mode=TwoWay}" />
                <RadioButton
                    Background="Transparent"
                    Content="I"
                    FontSize="16"
                    FontFamily="Wingdings"
                    IsChecked="{Binding PanMode, Mode=TwoWay}"
                    FontStyle="Normal"
                    ToolTip="Pan"
                    Style="{StaticResource EmptyRadioButtonStyle}"
                    Width="25"
                    RenderTransformOrigin="0.5,0.5"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontWeight="Bold">
                </RadioButton>
                <Button
                    Background="Transparent"
                    Content="-"
                    FontSize="20"
                    Style="{StaticResource TransparentButtonStyle}"
                    ToolTip="Zoom out"
                    Width="25"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,-4,0,0"
                    FontStyle="Normal"
                    Click="ZoomInClick" />
                <Button
                    Background="Transparent"
                    Content="+"
                    FontSize="16"
                    Click="ZoomOutClick"
                    Style="{StaticResource TransparentButtonStyle}"
                    FontStyle="Normal"
                    ToolTip="Zoom in"
                    Width="25"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Center" />
            </StackPanel>
        </Grid>
        <Border
            x:Name="optionsBorder"
            BorderBrush="{DynamicResource ButtonBorder}"
            BorderThickness="1"
            Margin="10,5,5,5"
            Background="White"
            Grid.Row="1"
            Grid.Column="1"
            CornerRadius="10"
            Visibility="{Binding IsChecked, Converter={StaticResource BoolConverter}, ElementName=checkBox}">
            <Grid
                Margin="5">
                <StackPanel
                    Orientation="Vertical">
                    <TextBlock
                        HorizontalAlignment="Left"
                        TextWrapping="Wrap"
                        Text="Render options:"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0" />

                    <CheckBox
                        Content="Show grid (slow)"
                        Margin="0,5,0,0"
                        IsChecked="{Binding ShowGrid, Mode=TwoWay}"/>
                    <CheckBox
                        Content="Display normals (slow)"
                        Margin="0,5,0,0"
                        IsChecked="{Binding ShowNormals, Mode=TwoWay}" />

                    <CheckBox
                        Content="Two sided mesh"
                        Margin="0,5,0,0"
                        IsChecked="{Binding ShowTwoSided, Mode=TwoWay}" />
                    <CheckBox
                        Content="Use mesh normals (smooth)"
                        Margin="0,5,0,0"
                        IsChecked="{Binding UseMeshNormals, Mode=TwoWay}" />
                    <TextBlock
                        HorizontalAlignment="Left"
                        TextWrapping="Wrap"
                        Text="Algorithm properties:"
                        VerticalAlignment="Top"
                        Margin="0,5,0,0" />
                    <RadioButton
                        Content="Math interpolation"
                        ToolTip="Math interpolation. No additional function calls."
                        Margin="0,5,0,0"
                        IsChecked="{Binding UseMathInterpolation, Mode=TwoWay}" />
                    <RadioButton
                        Content="Golden-section search"
                        ToolTip="Searth the intersection with golden section algorithm."
                        Margin="0,5,0,0"
                        IsChecked="{Binding UseGoldenSection, Mode=TwoWay}" />
                    <RadioButton
                        Content="Gradient descent"
                        IsEnabled="False"
                        ToolTip="Searth the intersection with gradient descent algorithm."
                        Margin="0,5,0,0"
                        IsChecked="{Binding UseGradientDescent, Mode=TwoWay}" />
                </StackPanel>
            </Grid>
        </Border>
        <CheckBox
            x:Name="selectFunctionCheckBox"
            Content="Select function"
            Grid.Column="2"
            HorizontalAlignment="Right"
            Style="{StaticResource TransparentCheckBox}"
            VerticalAlignment="Bottom"
            FontSize="16"
           
            Margin="0,0,20,13"
            IsChecked="{Binding ShowFunctionsPanel, Mode=TwoWay}" />
        <CheckBox
            x:Name="checkBox"
            Content="Render properties"
            Grid.Column="1"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Grid.Row="2"
            Style="{StaticResource TransparentCheckBox}"
            Margin="17,10,0,10"
            Cursor="Hand"
            IsChecked="True" />
        <Border
            x:Name="functionsBorder"
            BorderBrush="{StaticResource ButtonBorder}"
            BorderThickness="1"
            Margin="5"
            DataContext="{Binding FunctionsViewModel}"
            Grid.Row="1"
            Background="White"
            Grid.Column="3"
            CornerRadius="10"
            Visibility="{Binding IsChecked, Converter={StaticResource BoolConverter}, ElementName=selectFunctionCheckBox}">
            <Grid
                Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="239*" />
                    <ColumnDefinition
                        Width="237*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock
                    HorizontalAlignment="Left"
                    TextWrapping="Wrap"
                    Text="Functions"
                    VerticalAlignment="Top"
                    Margin="0,5,0,0" />
                <Button
                    Content="Set selected function"
                    HorizontalAlignment="Right"
                    Grid.Row="1"
                    Style="{StaticResource TransparentButtonStyle}"
                    VerticalAlignment="Bottom"
                    Grid.Column="1"
                    Command="{Binding SetFunctionCommand}"
                    Margin="0,0,10,3" />
                <ListBox
                    IsSynchronizedWithCurrentItem="True"
                    Background="{x:Null}"
                    BorderBrush="#FF7F9DB9"
                    FontSize="12"
                    SelectedItem="{Binding SelectedItem}"
                    ItemsSource="{Binding Items}"
                    DisplayMemberPath="Description"
                    Grid.Row="1"
                    Margin="0,5,10,5" />
            </Grid>
        </Border>
    </Grid>
</Window>
